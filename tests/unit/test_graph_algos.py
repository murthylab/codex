from unittest import TestCase

from src.utils.graph_algos import pathways, reachable_node_counts
from tests import TEST_NEURON_DATA_FACTORY


class TestGraphAlgos(TestCase):
    @classmethod
    def setUpClass(cls):
        cls.neuron_db = TEST_NEURON_DATA_FACTORY.get()

    def test_reachable_node_counts(self):
        num_cells = len(self.neuron_db.neuron_data)
        isets = self.neuron_db.input_sets()
        for n in sorted(self.neuron_db.neuron_data.keys())[1000:1001]:
            self.assertEqual(
                {
                    "1 hop": "8 (0%)",
                    "2 hops": "61 (0%)",
                    "3 hops": "5,254 (4%)",
                    "4 hops": "25,839 (21%)",
                    "5 hops": "83,227 (70%)",
                    "6 hops": "112,031 (95%)",
                    "7 hops": "113,966 (96%)",
                    "8 hops": "114,081 (97%)",
                    "9 hops": "114,091 (97%)",
                },
                reachable_node_counts({n}, isets, num_cells),
            )

    def test_pathways(self):
        s = t = 0
        isets = self.neuron_db.input_sets()
        osets = self.neuron_db.output_sets()
        all_rids = sorted(self.neuron_db.neuron_data.keys())

        self.assertEqual(None, pathways(s, t, isets, osets))

        s = all_rids[100]
        t = all_rids[101]

        self.assertEqual(None, pathways(s, s, isets, osets))
        self.assertEqual(
            {
                720575940602917088: 0,
                720575940602920364: 3,
                720575940618844757: 2,
                720575940625541434: 1,
                720575940633240159: 2,
                720575940633744023: 2,
                720575940638027497: 2,
                720575940638060632: 1,
            },
            pathways(s, t, isets, osets),
        )

        s = all_rids[200]
        t = all_rids[201]
        self.assertEqual(
            {
                720575940603409632: 0,
                720575940603430112: 7,
                720575940606776009: 5,
                720575940608451420: 3,
                720575940610177203: 2,
                720575940610620770: 4,
                720575940611379569: 5,
                720575940611550643: 4,
                720575940612337331: 3,
                720575940612364530: 3,
                720575940612922226: 4,
                720575940614123570: 2,
                720575940614595582: 3,
                720575940615655611: 3,
                720575940615782841: 2,
                720575940615916957: 2,
                720575940616580379: 2,
                720575940616812217: 4,
                720575940617498688: 3,
                720575940617952034: 4,
                720575940618268229: 4,
                720575940618710918: 2,
                720575940619401563: 2,
                720575940619440816: 4,
                720575940619797185: 4,
                720575940619876884: 3,
                720575940619895125: 5,
                720575940619931119: 5,
                720575940620226497: 5,
                720575940620321670: 5,
                720575940620732329: 3,
                720575940621202096: 3,
                720575940621385844: 5,
                720575940621449221: 4,
                720575940621667711: 4,
                720575940622263066: 4,
                720575940623605943: 4,
                720575940623788040: 5,
                720575940624201033: 5,
                720575940624982286: 4,
                720575940625203277: 3,
                720575940625259056: 2,
                720575940625518736: 2,
                720575940626067729: 3,
                720575940626112062: 3,
                720575940626142014: 5,
                720575940626783065: 4,
                720575940627092367: 4,
                720575940627296652: 2,
                720575940627361157: 3,
                720575940627383685: 4,
                720575940627927573: 5,
                720575940628050950: 2,
                720575940628081905: 5,
                720575940628819447: 2,
                720575940628858306: 5,
                720575940628977401: 4,
                720575940628990031: 5,
                720575940629845303: 4,
                720575940629894716: 4,
                720575940630131004: 5,
                720575940630346860: 4,
                720575940630810486: 3,
                720575940630939855: 5,
                720575940631117842: 4,
                720575940631991266: 4,
                720575940632200749: 4,
                720575940632659404: 3,
                720575940634250652: 5,
                720575940634809455: 5,
                720575940635990640: 3,
                720575940638128474: 6,
                720575940638343238: 4,
                720575940638891078: 5,
                720575940639830179: 4,
                720575940640096976: 4,
                720575940640830453: 5,
                720575940643576224: 1,
                720575940644381640: 5,
                720575940645258606: 4,
                720575940645538158: 3,
                720575940646796932: 3,
                720575940647228468: 3,
            },
            pathways(s, t, isets, osets),
        )

        s = all_rids[300]
        t = all_rids[301]
        self.assertEqual(
            {
                720575940603676844: 0,
                720575940603683505: 6,
                720575940604653484: 4,
                720575940605180192: 2,
                720575940605640905: 2,
                720575940606932169: 4,
                720575940607667723: 3,
                720575940608278620: 2,
                720575940609522382: 4,
                720575940610576430: 3,
                720575940612627058: 1,
                720575940613552947: 5,
                720575940614019379: 4,
                720575940615166111: 3,
                720575940615395165: 5,
                720575940615573365: 4,
                720575940616025686: 2,
                720575940616654370: 2,
                720575940617053563: 3,
                720575940617903131: 3,
                720575940618706112: 3,
                720575940619006087: 2,
                720575940619196398: 1,
                720575940619574181: 1,
                720575940619648116: 2,
                720575940619802800: 2,
                720575940620163056: 2,
                720575940620202266: 2,
                720575940620454127: 1,
                720575940620790256: 1,
                720575940621213556: 2,
                720575940622495401: 4,
                720575940622713638: 1,
                720575940622815123: 1,
                720575940622999688: 3,
                720575940623004711: 1,
                720575940623365557: 3,
                720575940623701000: 2,
                720575940623815155: 1,
                720575940623957173: 4,
                720575940624241132: 3,
                720575940624381966: 1,
                720575940624754981: 2,
                720575940625780836: 5,
                720575940625850938: 1,
                720575940625990500: 3,
                720575940626338148: 4,
                720575940626749061: 4,
                720575940627033875: 1,
                720575940627074846: 4,
                720575940627110824: 4,
                720575940627782014: 1,
                720575940627849515: 2,
                720575940627980955: 3,
                720575940628029378: 1,
                720575940629331663: 1,
                720575940629783852: 3,
                720575940630021115: 1,
                720575940630514194: 5,
                720575940631151663: 2,
                720575940631153455: 3,
                720575940633412762: 2,
                720575940634826676: 4,
                720575940635153527: 2,
                720575940635430030: 2,
                720575940635481262: 2,
                720575940635547384: 1,
                720575940635969758: 1,
                720575940635990640: 2,
                720575940636868186: 2,
                720575940637983814: 1,
                720575940638009434: 4,
                720575940638818118: 4,
                720575940638922099: 4,
                720575940640031360: 3,
                720575940640584077: 2,
                720575940646682676: 2,
                720575940650510070: 2,
            },
            pathways(s, t, isets, osets),
        )
